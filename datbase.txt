user: user_id , username, email, salt, salt_password, coins, game_played

game: gameid, s_id, result(abort/win/lost), coin reduced, coin gained, userid, 
    timestamp(end of the game. in case of abort its abort time)

sentences: s_id, text, length

character: letter, cost, category


make two array : 1. with s_id of login user sentences 2. for non-login user sentences.
why? so that i can choose an random number from those to start the game

user request play now---> react send: userid
                    
                    --->server create a game object : gameid, chhose: s_id, user_id, coin reduced & coin gained=0
                    ---> send back length of sentence + gameid 
                    
        ---> user guess --> alphabet --->react send: alphabet + current string + gameid + coins
                                    ---> server check: gameid---> get the actual sentence
                                        --> check 1: if the letter is in the array of containg letters or not
                                            : if yes---> check 2: if the actual string matches the current string
                                                                :if complete string match--> set and send message to ["congratulation","correct sentecce"]
                                                                                        ---> set and send coins gained: 100
                                                                                        ---> set coin reduced: old+0
                                                                                        ---> set and send result: win
                                                                                        ---> set timestamp
                                                                                        ---> update the coin of user ****** update first********
                                                                                        ---> append the game in the game db
                                                                                        --->set varibale "history_update": old+1
                                                                                        --->set gameplayed: old+1 in user table ( use gameid---> userid)
                                                                :if not ---> update the string in our backend 
                                                                        --->set and send message to ["correct guess", updated string]
                                                                        --->set coins reduced: old+ new (check from the table)
                                                                        --->send deducted coin (just the value of letter)
                                                                        --->send calculated remaining coins
                                                                        ---> update the coin of user ****** update first*******
                                            : if not---> send message ["wrong guess, current string]
                                                    ---> set coin reduced
                                                    ---> send deducted coin
                                                    ---> set varible to double
                                                    ---> send calculated remaining coins
                                                    ---> update the coin of user ****** update first********
                        --->sentence---> react send: sentence, gameid, coins, current string
                                    ---> server check: gameid--->actual sentence 
                                                        check1: if the actual string matches the current string
                                                                :if complete string match--> set and send message to ["congratulation","correct sentecce"]
                                                                                        ---> set and send coins gained: 100
                                                                                        ---> set coin reduced: old+0
                                                                                        ---> set and send result: win
                                                                                        ---> set timestamp
                                                                                        ---> update the coin of user ****** update first********
                                                                                        ---> append the game in the game db
                                                                                        --->set varibale "history_update": old+1
                                                                                        --->set gameplayed: old+1 in user table ( use gameid---> userid)
                                                                :if not ---> 
                                                                        --->set and send message to ["wrong guess", current string]
                                                                        --->send deducted coin :0
                                                                        --->send calculated remaining coins: old coins

                        --->abort---> react send message: abort, gameid
                                ---> server: gameid---> game---> set timestamp
                                                            ---> set result
                                                            ---> append the game in games
                                                            --->set varibale "history_update": old+1 
                                                            ( use useeffect on the component which shows history so it will render whenever game end/abort)
                                                            --->set gameplayed: old+1 in user table ( use gameid---> userid)
                                                            --->redirect to user dashboard
                                                
                        ---> time end---> react send: gameid, current string, coins, 
                                    ---> server ---> set timestamp, result
                                                ---> set coind reduced: old+20
                                                ---> send deducted coin :20
                                                ---> set and calculate and send user remaining coins
                                                ---> append game in game
                                                ---> set varible history_update: old+1
                                                ---> set gameplayed: old+1

*******************************************************************************************************************************


no-user dashboard:  login + game display ---> user click play now ---> game card appear---> next button

                ---> reeact send request: withut userid
                ---> server: create game: gameid, select s_id from other array, set otherthing to 0, userid: null
                            ---> send gameid, sentence length
    ---> non-uer guess:
                --> alphabet --->react send: alphabet + current string + gameid 
                                    ---> server check: gameid---> get the actual sentence
                                        --> check 1: if the letter is in the array of containg letters or not
                                            : if yes---> check 2: if the actual string matches the current string
                                                                :if complete string match--> set and send message to ["congratulation","correct sentecce"]
                                                                                        ---> set and send result: win
                                                                                        ---> set timestamp
                                                                                        ---> append the game in the game db
                                                                :if not ---> update the string in our backend 
                                                                        --->set and send message to ["correct guess", updated string]
                                                                        
                                            : if not---> send message ["wrong guess, current string]
                                                    

                -->sentence---> react send: sentence, gameid, current string
                                    ---> server check: gameid--->actual sentence 
                                                        check1: if the actual string matches the current string
                                                                :if complete string match--> set and send message to ["congratulation","correct sentecce"]
                                                                                        ---> set and send result: win
                                                                                        ---> set timestamp
                                                                                        ---> append the game in the game db
                                                                                        
                                                                :if not ---> 
                                                                        --->set and send message to ["wrong guess", current string]
                                                                        

                --->abort---> react send message: abort, gameid
                                ---> server: gameid---> game---> set timestamp
                                                            ---> set result
                                                            ---> append the game in games
                                                            --->redirect to dashboard
                                                    
                ---> time end---> react send: gameid, current string
                                    ---> server ---> set timestamp, result
                                                ---> append game in game
                                               


                                                                        

                                                                        

